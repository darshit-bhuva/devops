replicaCount: 2

image: 543567658769.dkr.ecr.ap-south-1.amazonaws.com/project-node-backend-staging:latest

namespace: staging

labels:
  tier: backend
  release: blue-green

podlabels:
  verison: 1.0.0
  
service:
  type: NodePort
  port: 1338
  healthcheck: /health-check
  pm2: 9209
  internaltype: ClusterIP
  internalport: 80
  grpcport: 1339
  
resources:
  requests:
    memory: "200Mi"
    cpu: "80m"
  limits:
    memory: "600Mi"
    cpu: "400m"

livenessProbe:
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
  initialDelaySeconds: 5
  timeoutSeconds: 30
readinessProbe:
  initialDelaySeconds: 5
  timeoutSeconds: 30
  failureThreshold: 3
  periodSeconds: 10
  successThreshold: 1

nodeAffinity:
  requiredDuringSchedulingIgnoredDuringExecution:
    nodeSelectorTerms:
    - matchExpressions:
      - key: mysqlstagpv
        operator: NotIn
        values:
        - apsouth1b
      - key: node-type
        operator: In
        values:
        - spot
        - on-demand

tolerations:
  - key: "topology"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"


autoscaling:
  enabled: true
  minReplicas: "2"
  maxReplicas: "2"
  targetCPU: "60"
    # targetMemory: ""

disruption:
  enabled: true
  minAvailable: 1

#Because we are using our private docker registry deployed in Kubernetes if you are using AWS(ECR) than you can disable this.
imagePullSecrets:
  enabled: true
  name: regcred

podprestophook:
  enabled: true

job:
  enabled: false